<%- include('../components/template') %>
<main id="content" class="p-6">
  <div class="bg-transparent">
    <div class="flex justify-between items-center px-6 pt-4">
      <div>
        <h1 class="text-lg font-semibold text-white"><%= req.translations.users %></h1>
        <p class="mt-1 text-sm text-gray-400">
          <%= req.translations.usersDescription %>
        </p>
      </div>
      <button id="createButton" class="bg-blue-600 hover:bg-blue-500 text-white py-2 px-4 rounded-lg shadow-md transition">
        <%= req.translations.createUserButton %>
      </button>
    </div>

    <div id="nodeTable" class="mt-6 w-full overflow-x-auto">
      <input type="text" id="searchInput" class="w-full p-2 mt-4 rounded bg-gray-800 text-white border border-gray-700" placeholder="Search users...">
      <table class="w-full text-left border-collapse mt-4">
        <thead class="border-b text-white">
          <tr>
            <th class="py-2 px-4 font-medium"><%= req.translations.name %></th>
            <th class="py-2 px-4 font-medium"><%= req.translations.email %></th>
            <th class="py-2 px-4 font-medium"><%= req.translations.role %></th>
            <th class="py-2 px-4 font-medium"><%= req.translations.verificationStatus %></th>
            <th class="py-2 px-4 font-medium text-right"><%= req.translations.actions %></th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(function(user) { %>
          <tr class="border-b hover:bg-gray-800 transition">
            <td class="py-3 px-4 text-white flex items-center gap-3">
              <img class="h-8 w-8 rounded-full" src="https://api.dicebear.com/9.x/thumbs/svg?seed=<%= user.username %>" alt="" />
              <%= user.username %>
            </td>
            <td class="py-3 px-4 text-gray-300"><%= user.email %></td>
            <td class="py-3 px-4 text-gray-300"><%= user.admin ? req.translations.admin : req.translations.regularUserRole %></td>
            <td class="py-3 px-4 text-gray-300">
              <span class="px-2 py-1 text-sm font-medium rounded-lg" 
                style="background-color: <%= user.verified ? 'green' : 'red' %>; color: white;">
                <%= user.verified ? req.translations.verifiedStatus : req.translations.unverifiedStatus %>
              </span>
            </td>
            <td class="py-3 px-4 text-right flex gap-2 justify-end">
              <a href="/admin/users/edit/<%= user.userId %>" class="bg-yellow-500 hover:bg-yellow-400 text-white py-2 px-3 rounded-lg text-sm">Edit</a>
              <button class="bg-red-600 hover:bg-red-500 text-white py-2 px-3 rounded-lg text-sm removeButton" data-user-id="<%= user.userId %>">Remove</button>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>
    </div>

    <div id="nodeForm" class="mt-6 px-6 w-full hidden">
      <form class="bg-gray-900 p-6 rounded-lg">
        <label class="block text-gray-300 text-sm">Username:</label>
        <input id="userName" type="text" class="w-full mt-2 p-2 rounded bg-gray-800 text-white border border-gray-700" placeholder="Enter username" />
        
        <label class="block text-gray-300 text-sm mt-4">Email:</label>
        <input id="email" type="email" class="w-full mt-2 p-2 rounded bg-gray-800 text-white border border-gray-700" placeholder="Enter email" />

        <label class="block text-gray-300 text-sm mt-4">Password:</label>
        <input id="userPass" type="password" class="w-full mt-2 p-2 rounded bg-gray-800 text-white border border-gray-700" placeholder="******" />
        
        <label class="block text-gray-300 text-sm mt-4">Role:</label>
        <select id="userAdmin" class="w-full mt-2 p-2 rounded bg-gray-800 text-white border border-gray-700">
          <option value="admin">Admin</option>
          <option value="user">User</option>
          <!-- More roles if needed -->
          <option value="moderator">Moderator</option>
        </select>
        
        <button id="createNodeBtn" type="button" class="w-full mt-4 bg-blue-600 hover:bg-blue-500 text-white py-2 rounded-lg">Create</button>
      </form>
    </div>
  </div>

  <!-- Success and Error Messages -->
  <div id="message" class="hidden p-4 bg-green-500 text-white rounded-lg mt-4">
    User created successfully!
  </div>
  <div id="errorMessage" class="hidden p-4 bg-red-500 text-white rounded-lg mt-4">
    Error: Failed to create user.
  </div>

  <!-- Deletion Confirmation Modal -->
  <div id="confirmDeleteModal" class="hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center">
    <div class="bg-white p-6 rounded-lg">
      <p>Are you sure you want to remove this user?</p>
      <div class="flex justify-end mt-4">
        <button id="confirmDeleteBtn" class="bg-red-600 hover:bg-red-500 text-white py-2 px-4 rounded-lg">Yes, Remove</button>
        <button id="cancelDeleteBtn" class="ml-4 bg-gray-300 hover:bg-gray-200 text-black py-2 px-4 rounded-lg">Cancel</button>
      </div>
    </div>
  </div>
</main>

<script>
  // Toggle create user form visibility
  document.getElementById("createButton").addEventListener("click", function () {
    document.getElementById("nodeTable").classList.toggle("hidden");
    document.getElementById("nodeForm").classList.toggle("hidden");
  });

  // Search functionality for the user table
  document.getElementById("searchInput").addEventListener("input", function () {
    const searchTerm = this.value.toLowerCase();
    const rows = document.querySelectorAll("#nodeTable tbody tr");

    rows.forEach(row => {
      const username = row.querySelector("td:nth-child(1)").textContent.toLowerCase();
      const email = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
      
      if (username.includes(searchTerm) || email.includes(searchTerm)) {
        row.classList.remove("hidden");
      } else {
        row.classList.add("hidden");
      }
    });
  });

  // Handle user creation
  document.getElementById("createNodeBtn").addEventListener("click", function () {
    const username = document.getElementById("userName").value;
    const email = document.getElementById("email").value;
    const password = document.getElementById("userPass").value;
    const admin = document.getElementById("userAdmin").value === "admin";

    // Simple validation
    if (!username || !email || !password) {
      displayError("All fields are required.");
      return;
    }

    // Email format validation
    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    if (!emailPattern.test(email)) {
      displayError("Please enter a valid email.");
      return;
    }

    // Proceed with creating the user
    fetch("/users/create", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, email, password, admin, verified: false })
    })
    .then(response => response.ok ? response.json() : Promise.reject("Failed to create user"))
    .then(() => {
      displayMessage("User created successfully!");
      setTimeout(() => window.location.reload(), 2000);
    })
    .catch(error => displayError("Error: " + error));
  });

  // Show success message
  function displayMessage(message) {
    const messageElement = document.getElementById("message");
    messageElement.textContent = message;
    messageElement.classList.remove("hidden");
  }

  // Show error message
  function displayError(message) {
    const errorMessageElement = document.getElementById("errorMessage");
    errorMessageElement.textContent = message;
    errorMessageElement.classList.remove("hidden");
  }

  // Handle user removal with confirmation modal
  document.querySelectorAll(".removeButton").forEach(button => {
    button.addEventListener("click", function () {
      const userId = this.dataset.userId;

      // Show the confirmation modal
      document.getElementById("confirmDeleteModal").classList.remove("hidden");

      // Cancel deletion
      document.getElementById("cancelDeleteBtn").addEventListener("click", function () {
        document.getElementById("confirmDeleteModal").classList.add("hidden");
      });

      // Confirm deletion
      document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
        fetch("/user/delete", {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userId })
        })
        .then(response => response.ok ? window.location.reload() : Promise.reject("Failed to delete user"))
        .catch(error => alert("Error: " + error));
        document.getElementById("confirmDeleteModal").classList.add("hidden");
      });
    });
  });
</script>

<%- include('../components/footer') %>
