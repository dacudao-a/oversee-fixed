<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AFK Page - Earn Rewards - Executorx Hosting Panel</title>
  <link rel="icon" type="image/png" href="https://yt3.googleusercontent.com/IVqzx0L3Ffpapttg-WK5yU9frk4AIVKixHnmmQjQ7RLrt4e66-7Ox6srKG_QVat5ceEq-98-s9s=s160-c-k-c0x00ffffff-no-rj">
  <style>
    body {
      margin: 0;
      overflow: hidden;
      font-family: 'Space Grotesk', sans-serif;
      background-color: #10181e;
      color: white;
      text-align: center;
    }

    canvas {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
    }

    .animated-text {
      font-size: 2rem;
      font-weight: bold;
      color: white;
      animation: fadeInOut 3s infinite;
    }

    @keyframes fadeInOut {
      0% { opacity: 0; }
      50% { opacity: 1; }
      100% { opacity: 0; }
    }

    .notif-box {
      position: fixed;
      right: 20px;
      background: rgba(0, 0, 0, 0.85);
      color: white;
      padding: 12px 18px;
      border-radius: 8px;
      font-size: 14px;
      font-weight: bold;
      z-index: 1000;
      opacity: 0;
      transition: opacity 0.5s, transform 0.5s;
    }
  </style>
</head>

<body>
  <canvas id="background"></canvas>

  <main class="flex-grow container mx-auto px-4 py-8">
    <div class="mt-24 flex justify-center">
      <div class="text-center">
        <h2 class="text-2xl font-bold mb-4">AFK Page</h2>
        <p class="text-gray-400 mb-6">Earn Coins for free, by leaving this page open.</p>
        <div class="animated-text">Stay AFK & Earn Rewards!</div>
        <p>AFK Time: <span id="afkTime">0 hours, 0 minutes, and 0 seconds</span></p>
        <div class="flex justify-center gap-4 mt-4">
          <button type="button" class="bg-orange-600 text-sm font-medium text-white px-4 py-2 rounded-full hover:bg-orange-700 transition">
            <span id="coinCountdown">Waiting...</span>
          </button>
          <button type="button" class="bg-gray-200 text-gray-700 text-sm font-medium px-4 py-2 rounded-full transition hover:bg-gray-300">
            <span id="sessionEarn">0</span> Coins Earned
          </button>
        </div>
      </div>
    </div>
  </main>

  <script>
    let session = parseInt(localStorage.getItem("sessionCoins")) || 0;
    let afkTime = parseInt(localStorage.getItem("afkTime")) || 0;
    let ws;
    let reconnectAttempts = 0;

    function connect() {
      let protocol = window.location.protocol === "https:" ? "wss" : "ws";
      let host = window.location.host;
      ws = new WebSocket(`${protocol}://${host}/afkwspath`);

      ws.onopen = () => {
        console.log("[WS] Connected.");
        document.getElementById("coinCountdown").innerHTML = "Earning Coins...";
        reconnectAttempts = 0;
        ws.send(JSON.stringify({ type: "ping" }));
      };

      ws.onmessage = (msg) => {
        let data = JSON.parse(msg.data);
        if (data.type === "count") {
          document.getElementById("coinCountdown").innerHTML = `${data.amount} seconds`;
          afkTime++;
          localStorage.setItem("afkTime", afkTime);
          updateAFKTimeDisplay();
        } else if (data.type === "coin") {
          addCoins(90);
          showNotification("ðŸ’° You earned 90 coins!");
        }
      };

      ws.onerror = reconnect;
      ws.onclose = reconnect;
    }

    function reconnect() {
      reconnectAttempts++;
      let delay = Math.min(5000, reconnectAttempts * 750);
      document.getElementById("coinCountdown").innerHTML = "Reconnecting...";
      setTimeout(connect, delay);
    }

    function addCoins(amount) {
      session += amount;
      localStorage.setItem("sessionCoins", session);
      document.getElementById("sessionEarn").innerHTML = `${session} coins`;
    }

    function updateAFKTimeDisplay() {
      let hours = Math.floor(afkTime / 3600);
      let minutes = Math.floor((afkTime % 3600) / 60);
      let seconds = afkTime % 60;
      document.getElementById("afkTime").innerHTML = `${hours} hours, ${minutes} minutes, and ${seconds} seconds`;
    }

    function showNotification(message) {
      let existingNotifs = document.querySelectorAll(".notif-box");
      if (existingNotifs.length > 2) return;

      let notif = document.createElement("div");
      notif.innerText = message;
      notif.classList.add("notif-box");
      notif.style.bottom = `${20 + existingNotifs.length * 50}px`;

      document.body.appendChild(notif);
      setTimeout(() => {
        notif.style.opacity = "1";
        notif.style.transform = "translateY(-10px)";
      }, 100);

      setTimeout(() => {
        notif.style.opacity = "0";
        setTimeout(() => notif.remove(), 500);
      }, 3000);
    }

    updateAFKTimeDisplay();
    connect();
  </script>

  <script>
    const canvas = document.getElementById("background");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    let particles = [];
    const numParticles = 80;

    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = Math.random() * 3 - 1.5;
        this.speedY = Math.random() * 3 - 1.5;
      }

      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        if (this.x < 0 || this.x > canvas.width) this.speedX *= -1;
        if (this.y < 0 || this.y > canvas.height) this.speedY *= -1;
      }

      draw() {
        ctx.fillStyle = "rgba(255, 255, 255, 0.7)";
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
      }
    }

    function initParticles() {
      particles = [];
      for (let i = 0; i < numParticles; i++) particles.push(new Particle());
    }

    function animateParticles() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles.forEach(p => { p.update(); p.draw(); });
      requestAnimationFrame(animateParticles);
    }

    initParticles();
    animateParticles();
  </script>
</body>
</html>
